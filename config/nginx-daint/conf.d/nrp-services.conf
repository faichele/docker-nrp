upstream uwsgicluster {
    server unix:///home2/bbpnrsoa/.local/etc/nginx/nrp-services.sock;
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}



upstream rosbridge {
    server 127.0.0.1:9090;
}

upstream gzbridge {
    server 127.0.0.1:7681;
}


server {

        listen 8080;
        server_name localhost;

        # UPDATE to match your local Experiments folder
        set $simulation_experiments_folder /home2/bbpnrsoa/nrp/src/Experiments;

        # UPDATE to match your local temporary folder where experiements are cloned
        set $simulation_cloned_folder /tmp;

        set $cors "true${request_method}";
        set $cors_origin "$http_origin";
        set $cors_methods "GET, POST, PUT, DELETE, OPTIONS";
        set $cors_headers "Authorization,Content-Type,*";


        set $oidc_client_id "neurorobotics-backend";
        set $oidc_client_secret "APehe0P7zJQm7i9Foiko61JUcD5yHlW5WZiX1B9AdtCO7ISGH60tysTXX6gIT-4o-b4tIdDG7SjxL8ISDVIhyoo";
        set $accept_client_auth true;

        location /webstream/ {
                more_set_headers 'Access-Control-Allow-Origin: $cors_origin';
                more_set_headers 'Access-Control-Allow-Methods: $cors_methods';
                more_set_headers 'Access-Control-Allow-Headers: $cors_headers';

                proxy_pass http://localhost:8081/;
                proxy_set_header Host $host;
        }


        location /gzbridge {
            proxy_pass http://127.0.0.1:7681;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            # Disable OIDC for use in full local mode (Axel)
#            access_by_lua_file "/home2/bbpnrsoa/.local/etc/nginx/lua/oauth-by-url.lua";
        }

        location /rosbridge {
            proxy_pass http://localhost:9090/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            # Disable OIDC for use in full local mode (Axel)
#            access_by_lua_file "/home2/bbpnrsoa/.local/etc/nginx/lua/oauth-by-url.lua";
        }


        location / {
                include            uwsgi_params;
                uwsgi_pass         uwsgicluster;
                # Starting a simulation can take time, especially when using a vizualisation cluster
                uwsgi_read_timeout 300;

                more_set_headers 'Access-Control-Allow-Origin: $cors_origin';
                more_set_headers 'Access-Control-Allow-Methods: $cors_methods';
                more_set_headers 'Access-Control-Allow-Headers: $cors_headers';

                # Disable OIDC for use in full local mode (Axel)
#                access_by_lua_file "/home2/bbpnrsoa/.local/etc/nginx/lua/oauth.lua";

                if ($cors = "trueOPTIONS") {
                        return 204;
                }

                proxy_pass_request_headers on;
                proxy_set_header Host $http_host;
        }

        # Incinga2 monitoring services
#        location /health {
#                include            uwsgi_params;
#                uwsgi_pass         uwsgicluster;
#        }

        # Swagger interface
        location /api {
                include            uwsgi_params;
                uwsgi_pass         uwsgicluster;

                more_set_headers 'Access-Control-Allow-Origin: $cors_origin';
                more_set_headers 'Access-Control-Allow-Methods: $cors_methods';
                more_set_headers 'Access-Control-Allow-Headers: $cors_headers';

                proxy_pass_request_headers on;
                proxy_set_header Host $http_host;
        }

        # Disable OIDC for use in full local mode (Axel)
#        location /_access_token {
#                proxy_pass https://services.humanbrainproject.eu/oidc/introspect;
#        }

        # Disable OIDC for use in full local mode (Axel)
#        location /_userinfo {
#                proxy_pass https://services.humanbrainproject.eu/oidc/userinfo;
#        }

        #load simulation configuration files from the model's folder
        location /config-from-template-folder/ {
                more_set_headers 'Access-Control-Allow-Origin: $cors_origin';
                more_set_headers 'Access-Control-Allow-Methods: $cors_methods';
                more_set_headers 'Access-Control-Allow-Headers: $cors_headers';

                if ($request_method = OPTIONS ) {
                        return 204;
                }

                alias $simulation_experiments_folder/;
        }

        #load simulation configuration files from the cloned temporary folder
        location /config-from-cloned-folder/ {
                more_set_headers 'Access-Control-Allow-Origin: $cors_origin';
                more_set_headers 'Access-Control-Allow-Methods: $cors_methods';
                more_set_headers 'Access-Control-Allow-Headers: $cors_headers';

                if ($request_method = OPTIONS ) {
                        return 204;
                }

                alias $simulation_cloned_folder/;
        }


        set $cors "true${request_method}";
        set $cors_origin "*";
        set $cors_methods "GET, POST, PUT, DELETE, OPTIONS";
        set $cors_headers "Authorization,Content-Type,If-Modified-Since,*";
        location /assets {
            more_set_headers 'Access-Control-Allow-Origin: $cors_origin';
            more_set_headers 'Access-Control-Allow-Methods: $cors_methods';
            more_set_headers 'Access-Control-Allow-Headers: $cors_headers';
            more_set_headers 'Access-Control-Expose-Headers: Content-Length';

            if ($cors = "trueOPTIONS") {
                return 204;
            }

            root /home2/bbpnrsoa/nrp/src/gzweb/http/client;
        }

}
