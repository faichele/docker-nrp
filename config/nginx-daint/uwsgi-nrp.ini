[uwsgi]
# Application's base folder
base = $(HBP)

chdir = %(base)/ExDBackend/hbp_nrp_backend/
wsgi-file = %(base)/ExDBackend/hbp_nrp_backend/hbp_nrp_backend/runserver.py
virtualenv = $(VIRTUAL_ENV)

socket = $(HOME)/.local/etc/nginx/nrp-services.sock
chmod-socket = 666

callable = app

# multi-threading
enable-threads = true
threads = 8
master = false

# Redirect logs (need to be readable by logstash)
#logto = $(HOME)/.local/var/log/nginx/%n.log
#logfile-chmod = 644

# Trace back. Allow a stack trace to be printed when running command
# uwsgi --connect-and-read /tmp/tbsocket1
# Works for local install not in docker
#py-tracebacker=/tmp/tbsocket

# Load python plugin
plugin-dir = /usr/lib/uwsgi/plugins
plugins = python

# Disable python assert
optimize = 0

# if you spawn a new process, e.g., a state machine, during a request it will inherit the file descriptors of the worker spawning it -
# including the socket connected with the webserver/router. We observed this interrupts the sockets, that's why
# the following line disables this behaviour
close-on-exec

# Disable uwsgi logging. Backend messages are still being recorded in 'logto' file
# Or if 'logto' is disabled, to the stdout
disable-logging